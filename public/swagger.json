{
    "openapi": "3.0.0",
    "paths": {
        "/games": {
            "get": {
                "tags": [
                    "Game"
                ],
                "summary": "Get list of all games",
                "description": "Get all games.",
                "operationId": "4778c61bb962d289c6f2a3fa7808e6fe",
                "responses": {
                    "200": {
                        "description": "Array of games",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Game"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "Create a new game",
                "description": "Create a new game.",
                "operationId": "0c07edcb33a80a9c1160b2d534933e6c",
                "requestBody": {
                    "description": "Provide game name",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nom"
                                ],
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "example": "Chess"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Game created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/games/{id}": {
            "get": {
                "tags": [
                    "Game"
                ],
                "summary": "Get a single game",
                "description": "Get a single game by ID.",
                "operationId": "c16d89c6db36f6a71322534fe924e1e6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Game"
                ],
                "summary": "Update an existing game",
                "description": "Update an existing game.",
                "operationId": "84b32a1acec4478423708cb806220cd3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Game data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Game"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Game updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Game"
                ],
                "summary": "Delete a game",
                "description": "Delete a game by ID.",
                "operationId": "9da75a65595bc905154e4685c7ec0a88",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Game deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game not found"
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Get list of all rooms with associated user and game details, and available games",
                "operationId": "fc04f85434400dbf0e26d2ec77a5878d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "rooms": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Room"
                                            }
                                        },
                                        "games": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Game"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch data"
                    }
                }
            },
            "post": {
                "tags": [
                    "Room"
                ],
                "summary": "Create a new room",
                "operationId": "afb43684c849533c65e931df636b4de6",
                "requestBody": {
                    "description": "Provide room details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nom",
                                    "type"
                                ],
                                "properties": {
                                    "nom": {
                                        "type": "integer",
                                        "example": 1234
                                    },
                                    "type": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "optional"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Room created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Get a single room with associated user and game",
                "operationId": "1c71dfd30793f918f07dc95b23daefc6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Room"
                ],
                "summary": "Update an existing room",
                "operationId": "ea75b11760a871bba18cf5f9e43a5b70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Room data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Room"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Room"
                ],
                "summary": "Delete a room",
                "operationId": "cf9104dbefd91a81bebb07cafe7e70cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Room deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found"
                    }
                }
            }
        },
        "/scores": {
            "get": {
                "tags": [
                    "Score"
                ],
                "summary": "Get list of all scores with associated user and game",
                "operationId": "8ccac5260c190d3c079fec64df059a23",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Score"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Score"
                ],
                "summary": "Create a new score",
                "operationId": "048581179957f5d1e62afee858d20466",
                "requestBody": {
                    "description": "Provide score details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "userid",
                                    "gameid",
                                    "score"
                                ],
                                "properties": {
                                    "userid": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "gameid": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "score": {
                                        "type": "integer",
                                        "example": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Score created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Score"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/scores/{id}": {
            "get": {
                "tags": [
                    "Score"
                ],
                "summary": "Get a specific score with associated user and game",
                "operationId": "08f0fd0edcc2083731fdaa56c9c9eed1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Score ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Score found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Score"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Score not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Score"
                ],
                "summary": "Update an existing score",
                "operationId": "5729011f04d35479b947fa035c90484a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Score ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Score data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Score"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Score updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Score"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Score not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Score"
                ],
                "summary": "Delete a score",
                "operationId": "d1190a7ece8cafa70ae84e7c0a1b0c06",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Score ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Score deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Score deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Score not found"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "description": "Register a new user.",
                "operationId": "75ac4d6a6e8c8bdc865ea7806514679b",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nom",
                                    "password"
                                ],
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "johndoe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "pass1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logs in a user",
                "description": "Logs in a user and returns a JWT token.",
                "operationId": "2bed00028ae8e20c4e21a4f7b8c6c281",
                "requestBody": {
                    "description": "Pass user login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nom",
                                    "password"
                                ],
                                "properties": {
                                    "nom": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "johndoe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "pass1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "List all users",
                "description": "List all users.",
                "operationId": "7e2f5799553ec93c9c43e2a58490d447",
                "responses": {
                    "200": {
                        "description": "Array of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a single user",
                "description": "Get a single user by ID.",
                "operationId": "910a0c7cf580e1c605648d82a4e57f46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update a user",
                "description": "Update user details.",
                "operationId": "ddfe232db1870b82493bf8bd25596d37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "description": "Delete a user by ID.",
                "operationId": "43dd20becb1f47444e484cbb18ce345c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Game": {
                "title": "Game",
                "description": "Game model",
                "properties": {
                    "id": {
                        "description": "ID of the game",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "nom": {
                        "description": "Name of the game",
                        "type": "string",
                        "example": "Chess"
                    }
                },
                "type": "object"
            },
            "Room": {
                "title": "Room",
                "description": "Room model",
                "properties": {
                    "id": {
                        "description": "ID of the room",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "nom": {
                        "description": "Name of the room",
                        "type": "integer",
                        "example": 1234
                    },
                    "type": {
                        "description": "Type of the room",
                        "type": "boolean",
                        "example": true
                    },
                    "password": {
                        "description": "Password of the room",
                        "type": "string",
                        "example": "optional"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "game": {
                        "$ref": "#/components/schemas/Game"
                    }
                },
                "type": "object"
            },
            "Score": {
                "title": "Score",
                "description": "Score model",
                "properties": {
                    "id": {
                        "description": "ID of the score",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "userid": {
                        "description": "ID of the user",
                        "type": "integer",
                        "example": 1
                    },
                    "gameid": {
                        "description": "ID of the game",
                        "type": "integer",
                        "example": 1
                    },
                    "score": {
                        "description": "User's score in the game",
                        "type": "integer",
                        "example": 500
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "game": {
                        "$ref": "#/components/schemas/Game"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "ID of the user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "nom": {
                        "description": "Username",
                        "type": "string",
                        "example": "johndoe"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string",
                        "example": "pass1234"
                    }
                },
                "type": "object"
            }
        }
    }
}